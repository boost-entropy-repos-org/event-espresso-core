{"version":3,"sources":["../domains/eventEditor/src/ui/datetimes/DateRegistrationsLink.tsx","../domains/eventEditor/src/ui/datetimes/datesList/cardView/DateCapacity.tsx","../domains/eventEditor/src/ui/datetimes/hooks/useDatesActionMenuItems.ts","../domains/eventEditor/src/ui/datetimes/datesList/actionsMenu/DateActionsMenu.tsx","../domains/eventEditor/src/ui/datetimes/datesList/editable/EditableName.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/Checkbox.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useHeaderRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/useBodyRowGenerator.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/formValidation.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useBulkEditFormConfig.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/useSubmitForm.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/details/EditDetails.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/delete/useOnDelete.ts","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/delete/Delete.tsx","../domains/eventEditor/src/ui/datetimes/datesList/bulkEdit/actions/Actions.tsx","../domains/eventEditor/src/ui/datetimes/datesList/tableView/TableView.tsx"],"names":["tooltipProps","placement","DateRegistrationsLink","datetime","regListUrl","useRegistrationsLink","datetime_id","dbId","tooltip","__","href","DateCapacity","entity","updateEntity","useDatetimeMutator","id","updateRelatedTickets","useUpdateRelatedTickets","ticketQuantityForCapacity","useTicketQuantityForCapacity","onChange","useCallback","cap","capacity","parseInfinity","inputGenerator","value","useDatesActionMenuItems","useEntityActionsMenuItems","DateActionsMenu","props","menuItems","EditableName","className","view","dateName","name","lineCount","onChangeName","fitText","tag","withFeature","useVisibleDatetimeIds","visibleDatetimeIds","visibleEntityIds","useHeaderRowGenerator","filterState","displayStartOrEndDate","cells","key","type","filter","filterCellByStartOrEndDate","primary","addZebraStripes","addZebraStripesOnMobile","useBodyRowGenerator","allDatetimes","useDatetimes","idToDatetimeMap","useMemo","idToEntityMap","entityId","sortingEnabled","bgClassName","getDatetimeBackgroundColorClassName","shortenGuid","statusClassName","datetimeStatus","cellsData","format","Date","startDate","ENTITY_LIST_DATE_TIME_FORMAT","endDate","sold","filterCells","pipe","validate","values","a","yupToFinalFormErrors","validationSchema","yup","min","unitOptions","intervalsToOptions","pick","DATE_INTERVALS","useBulkEditFormConfig","config","onSubmit","onSubmitFrom","form","restParams","adjacentFormItemProps","useMemoStringify","layout","debugFields","sections","icon","ProfileOutlined","title","fields","label","fieldType","CalendarOutlined","formControlProps","subFields","options","ControlOutlined","parseAsInfinity","useSubmitForm","onClose","useBulkEdit","getSelected","unSelectAll","allDates","updateEntities","useBulkEditDatetimes","formData","input","formToBulkUpdateInput","EditDetails","isOpen","formConfig","warning","useOnDelete","areTrashedDates","bulkDelete","useBulkDeleteDatetimes","Delete","onDelete","useConfirmationDialog","message","onConfirm","onCancel","confirmationDialog","onOpen","useEffect","useState","action","setAction","useDisclosure","useDatesListFilterState","status","DatetimeStatus","trashedOnly","onApply","Checkbox","defaultAction","withBulkEdit","filteredDateIds","useFilteredDateIds","sortDates","useReorderDatetimes","sortResponder","bodyRowGenerator","headerRowGenerator","domain","entityIds","listId","datesList","onSort","tableCaption","tableId"],"mappings":"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","file":"static/js/dates-table-view.2b7e484a.chunk.js","sourcesContent":["import React from 'react';\n\nimport { __ } from '@eventespresso/i18n';\nimport { RegistrationsLink } from '@eventespresso/components';\nimport { useRegistrationsLink } from '@eventespresso/edtr-services';\nimport type { Datetime } from '@eventespresso/edtr-services';\n\ninterface Props {\n\tdatetime: Datetime;\n}\n\nconst tooltipProps = { placement: 'top' as const };\n\nconst DateRegistrationsLink: React.FC<Props> = ({ datetime }) => {\n\tconst regListUrl = useRegistrationsLink({ datetime_id: datetime.dbId });\n\n\tconst tooltip = __('view ALL registrations for this date.');\n\n\treturn <RegistrationsLink href={regListUrl} tooltip={tooltip} tooltipProps={tooltipProps} />;\n};\n\nexport default DateRegistrationsLink;\n","import React, { useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { parseInfinity } from '@eventespresso/utils';\nimport { InlineEditInfinity, TextProps } from '@eventespresso/components';\nimport {\n\tuseDatetimeMutator,\n\tuseUpdateRelatedTickets,\n\tuseTicketQuantityForCapacity,\n} from '@eventespresso/edtr-services';\nimport type { DateItemProps } from '../types';\n\nconst DateCapacity: React.FC<DateItemProps> = ({ entity: datetime }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst updateRelatedTickets = useUpdateRelatedTickets(datetime.id);\n\tconst ticketQuantityForCapacity = useTicketQuantityForCapacity();\n\n\tconst onChange: TextProps['onChange'] = useCallback(\n\t\t(cap) => {\n\t\t\tconst capacity = parseInfinity(cap);\n\t\t\tif (capacity !== datetime.capacity) {\n\t\t\t\tupdateEntity({ capacity });\n\n\t\t\t\tconst inputGenerator = ticketQuantityForCapacity(capacity);\n\t\t\t\tupdateRelatedTickets(inputGenerator);\n\t\t\t}\n\t\t},\n\t\t[datetime.capacity, updateEntity, ticketQuantityForCapacity, updateRelatedTickets]\n\t);\n\n\treturn (\n\t\t<InlineEditInfinity\n\t\t\tonChange={onChange}\n\t\t\ttooltip={__('edit capacity (registration limit)…')}\n\t\t\tvalue={`${datetime.capacity}`}\n\t\t/>\n\t);\n};\n\nexport default DateCapacity;\n","import React from 'react';\n\nimport type { Datetime } from '@eventespresso/edtr-services';\nimport { useEntityActionsMenuItems } from '@edtrHooks/index';\n\nconst useDatesActionMenuItems = (datetime: Datetime): Array<React.ReactNode> => {\n\treturn useEntityActionsMenuItems('datetime', datetime);\n};\n\nexport default useDatesActionMenuItems;\n","import React from 'react';\n\nimport type { ActionsMenuComponentProps } from '@eventespresso/registry';\nimport { EntityActionsMenu } from '@eventespresso/components';\nimport useDatesActionMenuItems from '../../hooks/useDatesActionMenuItems';\nimport { Datetime } from '@eventespresso/edtr-services';\n\nconst DateActionsMenu: React.FC<ActionsMenuComponentProps<Datetime>> = ({ entity, ...props }) => {\n\tconst menuItems = useDatesActionMenuItems(entity);\n\n\treturn <EntityActionsMenu {...props} menuItems={menuItems} />;\n};\n\nexport default DateActionsMenu;\n","import React, { useCallback } from 'react';\n\nimport { __ } from '@eventespresso/i18n';\nimport { useDatetimeMutator } from '@eventespresso/edtr-services';\nimport { InlineEditText } from '@eventespresso/components';\n\nimport type { DateItemProps } from '../types';\n\ninterface EditableNameProps extends DateItemProps {\n\tclassName?: string;\n\tview?: 'card' | 'table';\n}\n\nconst EditableName: React.FC<EditableNameProps> = ({ className, entity: datetime, view = 'card' }) => {\n\tconst { updateEntity } = useDatetimeMutator(datetime.id);\n\n\tconst tooltip = __('edit title…');\n\n\tconst dateName = datetime.name || tooltip;\n\n\tconst lineCount = view === 'card' && 2;\n\n\tconst onChangeName = useCallback(\n\t\t(name: string): void => {\n\t\t\tif (name !== datetime.name) {\n\t\t\t\tupdateEntity({ name });\n\t\t\t}\n\t\t},\n\t\t[datetime.name, updateEntity]\n\t);\n\n\treturn (\n\t\t<InlineEditText\n\t\t\tclassName={className}\n\t\t\tfitText={view === 'card'}\n\t\t\tlineCount={lineCount}\n\t\t\tonChange={onChangeName}\n\t\t\ttag={view === 'table' ? 'div' : 'h4'}\n\t\t\ttooltip={tooltip}\n\t\t\tvalue={dateName}\n\t\t/>\n\t);\n};\n\nexport default EditableName;\n","import React from 'react';\n\nimport { ActionCheckbox } from '@eventespresso/components';\nimport { useVisibleDatetimeIds } from '@eventespresso/edtr-services';\nimport { withFeature } from '@eventespresso/services';\nimport type { ActionCheckboxProps } from '@eventespresso/components';\n\nconst Checkbox: React.FC<ActionCheckboxProps> = (props) => {\n\tconst [visibleDatetimeIds] = useVisibleDatetimeIds();\n\n\treturn <ActionCheckbox {...props} visibleEntityIds={visibleDatetimeIds} />;\n};\n\nexport default withFeature('use_bulk_edit')(Checkbox);\n","import React, { useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { Cell } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate } from '@eventespresso/edtr-services';\nimport Checkbox from './Checkbox';\n\nimport type { HeaderRowGeneratorFn } from '@eventespresso/components';\nimport type { DatetimesFilterStateManager } from '@eventespresso/edtr-services';\n\ntype DatesTableHeaderRowGen = HeaderRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst useHeaderRowGenerator = (): DatesTableHeaderRowGen => {\n\treturn useCallback<DatesTableHeaderRowGen>((filterState) => {\n\t\tconst { displayStartOrEndDate } = filterState;\n\n\t\tconst cellsData: Array<Cell> = [\n\t\t\t{\n\t\t\t\tkey: 'stripe',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-entity-list-status-stripe ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'checkbox',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\tvalue: (\n\t\t\t\t\t<div className={'ee-rspnsv-table-hide-on-mobile'}>\n\t\t\t\t\t\t<Checkbox />\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'id',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-id ee-number-column ee-rspnsv-table-column-nano',\n\t\t\t\tvalue: __('ID'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-name ee-rspnsv-table-column-huge',\n\t\t\t\tvalue: __('Name'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'start',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Start Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Start')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'end',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-rspnsv-table-column-default',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('End Date')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('End')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Capacity')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Cap')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'sold',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\tvalue: __('Sold'),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'registrations',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-col-hdr ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Reg list')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Regs')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tkey: 'actions',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName: 'ee-date-list-col-hdr ee-actions-column ee-rspnsv-table-column-big ee-centered-column',\n\t\t\t\tvalue: (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-long-label'}>{__('Actions')}</span>\n\t\t\t\t\t\t<span className={'ee-rspnsv-table-short-label'}>{__('Actions')}</span>\n\t\t\t\t\t</>\n\t\t\t\t),\n\t\t\t},\n\t\t];\n\n\t\tconst cells = cellsData.filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\treturn {\n\t\t\tcells,\n\t\t\tclassName: 'ee-editor-date-list-items-header-row',\n\t\t\tkey: 'dates-list-header',\n\t\t\tprimary: true,\n\t\t\ttype: 'row',\n\t\t};\n\t}, []);\n};\n\nexport default useHeaderRowGenerator;\n","import React, { useCallback, useMemo } from 'react';\nimport { format } from 'date-fns';\nimport { filter, pipe } from 'ramda';\n\nimport { addZebraStripesOnMobile } from '@eventespresso/components';\nimport { filterCellByStartOrEndDate, useDatetimes } from '@eventespresso/edtr-services';\nimport { ENTITY_LIST_DATE_TIME_FORMAT } from '@eventespresso/constants';\nimport { getDatetimeBackgroundColorClassName, datetimeStatus } from '@eventespresso/helpers';\nimport type { DatetimesFilterStateManager } from '@eventespresso/edtr-services';\nimport type { BodyRowGeneratorFn } from '@eventespresso/components';\nimport { idToEntityMap } from '@eventespresso/predicates';\nimport { shortenGuid } from '@eventespresso/utils';\n\nimport DateRegistrationsLink from '@edtrUI/datetimes/DateRegistrationsLink';\nimport DateActionsMenu from '@edtrUI/datetimes/datesList/actionsMenu/DateActionsMenu';\nimport DateCapacity from '../cardView/DateCapacity';\nimport { EditableName } from '../editable';\nimport Checkbox from './Checkbox';\n\nimport '../../../../../../../packages/styles/src/root/entity-status.css';\n\ntype DatesTableBodyRowGen = BodyRowGeneratorFn<DatetimesFilterStateManager>;\n\nconst exclude = ['row', 'stripe', 'name', 'actions'];\nconst addZebraStripes = addZebraStripesOnMobile(exclude);\n\nconst useBodyRowGenerator = (): DatesTableBodyRowGen => {\n\tconst allDatetimes = useDatetimes();\n\tconst idToDatetimeMap = useMemo(() => idToEntityMap(allDatetimes), [allDatetimes]);\n\n\treturn useCallback<DatesTableBodyRowGen>(\n\t\t({ entityId, filterState }) => {\n\t\t\tconst datetime = idToDatetimeMap?.[entityId];\n\t\t\tconst { displayStartOrEndDate, sortingEnabled } = filterState;\n\t\t\tconst bgClassName = getDatetimeBackgroundColorClassName(datetime);\n\t\t\tconst id = datetime.dbId || shortenGuid(datetime.id);\n\t\t\tconst statusClassName = datetimeStatus(datetime);\n\n\t\t\tconst capacity = {\n\t\t\t\tkey: 'capacity',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-capacity ee-rspnsv-table-column-tiny ee-number-column ee-col-5',\n\t\t\t\tvalue: sortingEnabled ? datetime.capacity : <DateCapacity entity={datetime} />,\n\t\t\t};\n\n\t\t\tconst name = {\n\t\t\t\tkey: 'name',\n\t\t\t\ttype: 'cell',\n\t\t\t\tclassName:\n\t\t\t\t\t'ee-date-list-cell ee-date-list-col-name ee-col-name ee-rspnsv-table-column-bigger ee-rspnsv-table-hide-on-mobile',\n\t\t\t\tvalue: sortingEnabled ? (\n\t\t\t\t\tdatetime.name\n\t\t\t\t) : (\n\t\t\t\t\t<EditableName\n\t\t\t\t\t\tclassName={'ee-entity-list-text ee-focus-priority-5'}\n\t\t\t\t\t\tentity={datetime}\n\t\t\t\t\t\tview={'table'}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tconst cellsData = [\n\t\t\t\t{\n\t\t\t\t\tkey: 'stripe',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: `ee-date-list-cell ee-entity-list-status-stripe ${bgClassName} ee-rspnsv-table-column-nano`,\n\t\t\t\t\tvalue: <div className={'ee-rspnsv-table-show-on-mobile'}>{datetime.name}</div>,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'checkbox',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-checkbox ee-rspnsv-table-column-micro',\n\t\t\t\t\tvalue: <Checkbox dbId={datetime.dbId} id={datetime.id} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'id',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-id ee-rspnsv-table-column-nano ee-number-column',\n\t\t\t\t\tvalue: id,\n\t\t\t\t},\n\t\t\t\tname,\n\t\t\t\t{\n\t\t\t\t\tkey: 'start',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(datetime.startDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'end',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-rspnsv-table-column-default',\n\t\t\t\t\tvalue: format(new Date(datetime.endDate), ENTITY_LIST_DATE_TIME_FORMAT),\n\t\t\t\t},\n\t\t\t\tcapacity,\n\t\t\t\t{\n\t\t\t\t\tkey: 'sold',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName: 'ee-date-list-cell ee-date-list-col-sold ee-rspnsv-table-column-tiny ee-number-column',\n\t\t\t\t\tvalue: datetime.sold || 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'registrations',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-date-list-cell ee-date-list-col-registrations ee-rspnsv-table-column-smaller ee-centered-column',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <DateRegistrationsLink datetime={datetime} />,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'actions',\n\t\t\t\t\ttype: 'cell',\n\t\t\t\t\tclassName:\n\t\t\t\t\t\t'ee-date-list-cell ee-date-list-col-actions ee-actions-column ee-rspnsv-table-column-big',\n\t\t\t\t\tvalue: sortingEnabled ? '-' : <DateActionsMenu entity={datetime} />,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tconst filterCells = filter(filterCellByStartOrEndDate(displayStartOrEndDate));\n\n\t\t\tconst cells = pipe(filterCells, addZebraStripes)(cellsData);\n\n\t\t\treturn {\n\t\t\t\tcells,\n\t\t\t\tclassName: `ee-editor-date-list-view-row ${statusClassName}`,\n\t\t\t\tid: `ee-editor-date-list-view-row-${datetime.id}`,\n\t\t\t\tkey: `row-${datetime.id}`,\n\t\t\t\ttype: 'row',\n\t\t\t};\n\t\t},\n\t\t[idToDatetimeMap]\n\t);\n};\n\nexport default useBodyRowGenerator;\n","import { __ } from '@eventespresso/i18n';\nimport * as yup from 'yup';\n\nimport { yupToFinalFormErrors } from '@eventespresso/form';\nimport { BulkEditFormShape } from './types';\n\nexport const validate = async (values: BulkEditFormShape): Promise<any> => {\n\treturn await yupToFinalFormErrors(validationSchema, values);\n};\n\nconst validationSchema = yup.object({\n\tname: yup.string().min(3, () => __('Name must be at least three characters')),\n});\n","import { useMemo, useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\nimport { pick } from 'ramda';\n\nimport { CalendarOutlined, ControlOutlined, ProfileOutlined } from '@eventespresso/icons';\nimport { intervalsToOptions, Intervals, DATE_INTERVALS } from '@eventespresso/dates';\nimport type { EspressoFormProps } from '@eventespresso/form';\n\nimport { validate } from './formValidation';\nimport type { BulkEditFormShape } from './types';\nimport { useMemoStringify } from '@eventespresso/hooks';\n\ntype DateFormConfig = EspressoFormProps<BulkEditFormShape>;\n\nconst unitOptions = intervalsToOptions(\n\tpick<Intervals, keyof Intervals>(['months', 'weeks', 'days', 'hours', 'minutes'], DATE_INTERVALS),\n\ttrue\n);\n\nconst useBulkEditFormConfig = (config?: EspressoFormProps<BulkEditFormShape>): DateFormConfig => {\n\tconst { onSubmit } = config;\n\n\tconst onSubmitFrom: DateFormConfig['onSubmit'] = useCallback(\n\t\t(values, form, ...restParams) => {\n\t\t\treturn onSubmit(values, form, ...restParams);\n\t\t},\n\t\t[onSubmit]\n\t);\n\n\tconst adjacentFormItemProps = useMemoStringify({\n\t\tclassName: 'ee-form-item-pair',\n\t});\n\n\treturn useMemo(\n\t\t() => ({\n\t\t\t...config,\n\t\t\tonSubmit: onSubmitFrom,\n\t\t\tvalidate,\n\t\t\tlayout: 'horizontal',\n\t\t\tdebugFields: ['values', 'errors'],\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: 'basics',\n\t\t\t\t\ticon: ProfileOutlined,\n\t\t\t\t\ttitle: __('Basics'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'name',\n\t\t\t\t\t\t\tlabel: __('Name'),\n\t\t\t\t\t\t\tfieldType: 'text',\n\t\t\t\t\t\t\tmin: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\tlabel: __('Description'),\n\t\t\t\t\t\t\tfieldType: 'rich-text-editor',\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'dates',\n\t\t\t\t\ticon: CalendarOutlined,\n\t\t\t\t\ttitle: __('Dates'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'shiftDates',\n\t\t\t\t\t\t\tlabel: __('Shift dates'),\n\t\t\t\t\t\t\tfieldType: 'group',\n\t\t\t\t\t\t\tformControlProps: {\n\t\t\t\t\t\t\t\tclassName: 'shift-dates',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsubFields: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'value',\n\t\t\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\t\t\tmin: 1,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'unit',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: unitOptions,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\t\tfieldType: 'select',\n\t\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('earlier'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'earlier',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: __('later'),\n\t\t\t\t\t\t\t\t\t\t\tvalue: 'later',\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'details',\n\t\t\t\t\ticon: ControlOutlined,\n\t\t\t\t\ttitle: __('Details'),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'capacity',\n\t\t\t\t\t\t\tlabel: __('Capacity'),\n\t\t\t\t\t\t\tfieldType: 'number',\n\t\t\t\t\t\t\tparseAsInfinity: true,\n\t\t\t\t\t\t\tmin: -1,\n\t\t\t\t\t\t\tformControlProps: adjacentFormItemProps,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t}),\n\t\t[adjacentFormItemProps, config, onSubmitFrom]\n\t);\n};\n\nexport default useBulkEditFormConfig;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useDatetimes, useBulkEditDatetimes, formToBulkUpdateInput } from '@eventespresso/edtr-services';\n\nimport type { BulkEditFormShape } from './types';\n\ntype Callback = (values: BulkEditFormShape) => void;\n\nconst useSubmitForm = (onClose: VoidFunction): Callback => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst allDates = useDatetimes();\n\tconst { updateEntities } = useBulkEditDatetimes();\n\treturn useCallback<Callback>(\n\t\t(formData) => {\n\t\t\t// pull the shutter down\n\t\t\tonClose();\n\t\t\t// back to basics\n\t\t\tunSelectAll();\n\t\t\t// prepare mutation input from data\n\t\t\tconst input = formToBulkUpdateInput(formData, allDates, getSelected());\n\t\t\t// do the thing\n\t\t\tupdateEntities(input);\n\t\t},\n\t\t[allDates, getSelected, onClose, unSelectAll, updateEntities]\n\t);\n};\n\nexport default useSubmitForm;\n","import React from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { BulkEditDetails } from '@eventespresso/components';\nimport useBulkEditFormConfig from './useBulkEditFormConfig';\nimport useSubmitForm from './useSubmitForm';\n\ntype EditDetailsProps = {\n\tisOpen: boolean;\n\tonClose: VoidFunction;\n};\n\nconst EditDetails: React.FC<EditDetailsProps> = ({ onClose, isOpen }) => {\n\tconst onSubmit = useSubmitForm(onClose);\n\tconst formConfig = useBulkEditFormConfig({ onSubmit });\n\n\treturn (\n\t\t<BulkEditDetails\n\t\t\tformConfig={formConfig}\n\t\t\tisOpen={isOpen}\n\t\t\tonClose={onClose}\n\t\t\ttitle={__('Bulk edit date details')}\n\t\t\twarning={__('any changes will be applied to ALL of the selected dates.')}\n\t\t/>\n\t);\n};\n\nexport default EditDetails;\n","import { useCallback } from 'react';\n\nimport { useBulkEdit } from '@eventespresso/services';\nimport { useBulkDeleteDatetimes } from '@eventespresso/edtr-services';\n\nimport type { OnDeleteProps } from './types';\n\ntype OnDelete = (props: OnDeleteProps) => VoidFunction;\n\nconst useOnDelete: OnDelete = ({ areTrashedDates, onClose }) => {\n\tconst { getSelected, unSelectAll } = useBulkEdit();\n\tconst bulkDelete = useBulkDeleteDatetimes();\n\treturn useCallback<VoidFunction>(() => {\n\t\t// pull the shutter down\n\t\tonClose();\n\t\t// back to basics\n\t\tunSelectAll();\n\n\t\t// goodbye folks :wave:\n\t\tbulkDelete(getSelected(), areTrashedDates);\n\t}, [areTrashedDates, bulkDelete, getSelected, onClose, unSelectAll]);\n};\n\nexport default useOnDelete;\n","import React, { useEffect } from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { useConfirmationDialog } from '@eventespresso/components';\nimport useOnDelete from './useOnDelete';\nimport { OnDeleteProps } from './types';\n\nconst Delete: React.FC<OnDeleteProps> = ({ areTrashedDates, onClose }) => {\n\tconst onDelete = useOnDelete({ areTrashedDates, onClose });\n\n\tconst { confirmationDialog, onOpen } = useConfirmationDialog({\n\t\tmessage: areTrashedDates\n\t\t\t? __('Are you sure you want to permanently delete these datetimes? This action can NOT be undone!')\n\t\t\t: __('Are you sure you want to trash these datetimes?'),\n\t\ttitle: areTrashedDates ? __('Delete datetimes permanently') : __('Trash datetimes'),\n\t\tonConfirm: onDelete,\n\t\tonCancel: onClose,\n\t});\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tuseEffect(() => onOpen(), []);\n\n\treturn <>{confirmationDialog}</>;\n};\n\nexport default Delete;\n","import React, { useState, useCallback } from 'react';\nimport { __ } from '@eventespresso/i18n';\nimport { useDisclosure } from '@chakra-ui/hooks';\n\nimport { BulkActions } from '@eventespresso/components';\nimport { useMemoStringify } from '@eventespresso/hooks';\nimport { withFeature } from '@eventespresso/services';\nimport type { BulkActionsProps } from '@eventespresso/components';\nimport { useDatesListFilterState } from '@eventespresso/edtr-services';\nimport { DatetimeStatus } from '@eventespresso/predicates';\n\nimport Checkbox from '../../tableView/Checkbox';\nimport { EditDetails } from '../details';\nimport { Delete } from '../delete';\n\ntype Action = 'edit-details' | 'delete' | '';\n\nconst Actions: React.FC = () => {\n\tconst [action, setAction] = useState<Action>('');\n\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\n\n\tconst { status } = useDatesListFilterState();\n\n\tconst areTrashedDates = status === DatetimeStatus.trashedOnly;\n\n\tconst options = useMemoStringify([\n\t\t{\n\t\t\tvalue: 'edit-details',\n\t\t\tlabel: __('edit datetime details'),\n\t\t},\n\t\t{\n\t\t\tvalue: 'delete',\n\t\t\tlabel: areTrashedDates ? __('delete datetimes') : __('trash datetimes'),\n\t\t},\n\t]);\n\n\tconst onApply = useCallback<BulkActionsProps<Action>['onApply']>(\n\t\t(action) => {\n\t\t\tsetAction(action);\n\t\t\tonOpen();\n\t\t},\n\t\t[onOpen]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<BulkActions Checkbox={Checkbox} defaultAction={options[0].value} onApply={onApply} options={options} />\n\t\t\t{isOpen && (\n\t\t\t\t<>\n\t\t\t\t\t{action === 'edit-details' && <EditDetails isOpen={true} onClose={onClose} />}\n\t\t\t\t\t{action === 'delete' && <Delete areTrashedDates={areTrashedDates} onClose={onClose} />}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default withFeature('use_bulk_edit')(Actions);\n","import React from 'react';\nimport { __ } from '@eventespresso/i18n';\n\nimport { EntityTable } from '@eventespresso/components';\nimport useHeaderRowGenerator from './useHeaderRowGenerator';\nimport useBodyRowGenerator from './useBodyRowGenerator';\nimport {\n\tdatesList,\n\tdomain,\n\tuseDatesListFilterState,\n\tuseFilteredDateIds,\n\tuseReorderDatetimes,\n} from '@eventespresso/edtr-services';\nimport { withBulkEdit } from '@eventespresso/services';\nimport { Actions as BulkEditActions } from '../bulkEdit';\n\nimport './styles.scss';\n\n/**\n * Displays event date details in a standard list table like view\n */\nconst TableView: React.FC = () => {\n\tconst filterState = useDatesListFilterState();\n\tconst filteredDateIds = useFilteredDateIds();\n\n\tconst { sortResponder: sortDates } = useReorderDatetimes(filteredDateIds);\n\n\tconst bodyRowGenerator = useBodyRowGenerator();\n\tconst headerRowGenerator = useHeaderRowGenerator();\n\n\treturn (\n\t\t<>\n\t\t\t<BulkEditActions />\n\t\t\t<EntityTable\n\t\t\t\tbodyRowGenerator={bodyRowGenerator}\n\t\t\t\tdomain={domain}\n\t\t\t\tentityIds={filteredDateIds}\n\t\t\t\tfilterState={filterState}\n\t\t\t\theaderRowGenerator={headerRowGenerator}\n\t\t\t\tlistId={datesList}\n\t\t\t\tonSort={sortDates}\n\t\t\t\ttableCaption={__('Event Dates')}\n\t\t\t\ttableId='date-entities-table-view'\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default withBulkEdit(TableView);\n"],"sourceRoot":""}